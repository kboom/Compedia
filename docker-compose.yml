version: '3.9'

# Better do this for kubernetes
services:
  # This container is the reverse proxy allowing us to reach select containers within Docker network
  # from localhost through a configured domainname/path similar to how it is being done in a production environment.
  # https://stackoverflow.com/questions/66111292/nginx-proxy-ssl-trusted-certificate-with-letsencrypt-upstream
  # https://www.ringingliberty.com/2021/02/09/how-does-nginx-verify-certificates-proxy_ssl_verify/
  nginx:
    image: ${DOCKER_REGISTRY-}compedia_nginx
    restart: always
    depends_on:
      - identity
      - search
      - webapp
    build:
      context: .
      dockerfile: Cluster\local\ReverseProxy\Image\Dockerfile
    container_name: reverse-proxy
    environment:
    - NGINX_HOST=compedia.local
    - NGINX_PORT=443
    ports:
    - 9443:443
    volumes:
      - ./Cluster/local/ReverseProxy/Configs:/etc/nginx:ro
      - ./Cluster/local/Certs:/etc/ssl/certs:ro
      - ./Cluster/local/Logs:/var/log/nginx:rw
    networks:
      compedia:

  identity:
    image: ${DOCKER_REGISTRY-}compedia_identity
    restart: always
    depends_on:
    - identity-db
    build:
      context: .
      dockerfile: Identity\Dockerfile
    hostname: identity.compedia.local
    networks:
      compedia:    
          aliases:
            - identity.compedia.local

  identity-db:
    image: "mcr.microsoft.com/mssql/server"
    hostname: identity-db
    networks:
      compedia:    
          aliases:
            - identity-db
    environment:
      - "SA_PASSWORD=Your_password123"
      - "ACCEPT_EULA=Y"

  search:
    image: ${DOCKER_REGISTRY-}compedia_search
    restart: always
    depends_on:
    - identity
    build:
      context: .
      dockerfile: Search\Dockerfile
    hostname: search.compedia.local
    networks:
      compedia:    
          aliases:
            - search.compedia.local

  webapp:
    image: ${DOCKER_REGISTRY-}compedia_webapp
    restart: always
    build:
      context: .
      dockerfile: Webapp\Dockerfile
    hostname: webapp.compedia.local
    networks:
      compedia:    
          aliases:
            - webapp.compedia.local

networks:
  compedia: